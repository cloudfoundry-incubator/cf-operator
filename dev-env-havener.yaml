#
#
# The dev-env-havener.yaml packs a development flow
# for a running minikube into a single configuration file.
# This flow involves:
# - compiling a binary
# - building a Docker img using the above binary
# - Installing a helm chart using the above docker img
#
# It also, enables you to customize it further, depending on your needs,
# e.g. to run it somewhere else, not necessarily minikube.
#
#
# To download the latest havener, please refer to https://github.com/homeport/havener,
# or trigger the following cmd:
# curl -sL https://raw.githubusercontent.com/homeport/havener/master/scripts/download-latest.sh | bash
#
#
# To install the charts, run it as follows:
#
# havener deploy --config dev-env-havener.yaml
#
# Make sure:
#
# - minikube is up and running (e.g. `minikube start`)
# - your helm client is in sync with tiller.
#
#

name: cf-operator-quarks
releases:
- name: cf-operator
  namespace: scf
  location: deploy/helm/cf-operator/
  overrides:
    image:
      tag: (( env DOCKER_IMAGE_TAG ))
      repository: (( env DOCKER_REPOSITORY ))
      org: (( env DOCKER_ORGANIZATION ))

env:
  DOCKER_IMAGE_TAG: (( shell . bin/include/versioning && echo "${ARTIFACT_VERSION}" ))
  DOCKER_REPOSITORY: cf-operator
  DOCKER_ORGANIZATION: cfcontainerization
  CRDS_ENABLED: false
  GO111MODULE: (( shell echo "${GO111MODULE}" ))

before:
- cmd: /bin/bash
  args:
  - -c
  - |
    #!/bin/bash
    set -euo pipefail

    export GO111MODULE=${GO111MODULE:-on}

    if ! hash minikube 2>/dev/null; then
      echo -e "Required tool minikube is not installed."
      echo
      exit 1
    fi

    eval `minikube docker-env`

    . bin/include/versioning
    echo "Tag for docker image is ${DOCKER_IMAGE_TAG}"

    ./bin/build-image

    export RELEASE_NAMESPACE="scf"
    kubectl delete mutatingwebhookconfiguration cf-operator-hook-${RELEASE_NAMESPACE} --ignore-not-found=true
    kubectl delete validatingwebhookconfiguration cf-operator-hook-${RELEASE_NAMESPACE} --ignore-not-found=true
    kubectl -n "${RELEASE_NAMESPACE}" delete secret cf-operator-webhook-server-cert --ignore-not-found=true

after:
- cmd: /bin/bash
  args:
  - -c
  - |
    #!/bin/bash
    export RELEASE_NAMESPACE="scf"
    echo -e "\nCurrent generated mutating webhooks"
    kubectl get mutatingwebhookconfigurations

    echo -e "\nCurrent generated validation webhooks"
    kubectl get validatingwebhookconfigurations

    echo -e "\nCurrent generated CRDs webhooks"
    kubectl get customresourcedefinitions

    echo -e "\nCurrent pods"
    kubectl -n "${RELEASE_NAMESPACE}" get pods
